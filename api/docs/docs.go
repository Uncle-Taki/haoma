// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/auth/login": {
            "post": {
                "description": "Login with email and password to verify player credentials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Authenticate a player",
                "parameters": [
                    {
                        "description": "Player login credentials",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.LoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/profile": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Retrieve player profile from JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Get authenticated player profile information",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.PlayerInfo"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/auth/signup": {
            "post": {
                "description": "Create a new player account with name, email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new player for the carnival",
                "parameters": [
                    {
                        "description": "Player registration information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.SignupRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.SignupResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/leaderboard": {
            "get": {
                "description": "Retrieve the taxteh-ye sharaf showing the greatest champions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Leaderboard"
                ],
                "summary": "Get the top leaderboard",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.LeaderboardResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/nodes/scan": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Scan a QR code at a physical location to unlock and start a carnival node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Nodes"
                ],
                "summary": "Scan QR code to access a carnival node",
                "parameters": [
                    {
                        "description": "QR code scan information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.StartNodeRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.StartNodeResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sessions/start": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Begin a mystical journey through carnival nodes of cyber trials",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Start a new carnival session",
                "parameters": [
                    {
                        "description": "Player information",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.StartSessionRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.StartSessionResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/sessions/{id}/answer": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Answer a riddle from the current carnival node",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Sessions"
                ],
                "summary": "Submit an answer to a question",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Session ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Answer submission",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.SubmitAnswerRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/internal_adapters_http.SubmitAnswerResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "internal_adapters_http.LeaderboardEntry": {
            "type": "object",
            "properties": {
                "achieved_at": {
                    "type": "string",
                    "example": "2025-09-18T14:30:45Z"
                },
                "completion_time": {
                    "type": "string",
                    "example": "38m45s"
                },
                "final_score": {
                    "type": "integer",
                    "example": 850
                },
                "player_name": {
                    "type": "string",
                    "example": "Rostam"
                },
                "rank": {
                    "type": "integer",
                    "example": 1
                }
            }
        },
        "internal_adapters_http.LeaderboardResponse": {
            "type": "object",
            "properties": {
                "entries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_adapters_http.LeaderboardEntry"
                    }
                }
            }
        },
        "internal_adapters_http.LoginRequest": {
            "type": "object",
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rostam@haoma.dev"
                },
                "password": {
                    "type": "string",
                    "example": "cyber_guardian_2024"
                }
            }
        },
        "internal_adapters_http.LoginResponse": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
                },
                "expires_in": {
                    "description": "seconds",
                    "type": "integer",
                    "example": 86400
                },
                "message": {
                    "type": "string",
                    "example": "Welcome back to the carnival!"
                },
                "player": {
                    "$ref": "#/definitions/internal_adapters_http.PlayerInfo"
                },
                "token_type": {
                    "type": "string",
                    "example": "Bearer"
                }
            }
        },
        "internal_adapters_http.NodeResponse": {
            "type": "object",
            "properties": {
                "number": {
                    "type": "integer",
                    "example": 1
                },
                "questions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/internal_adapters_http.QuestionResponse"
                    }
                }
            }
        },
        "internal_adapters_http.PlayerInfo": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rostam@haoma.dev"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "name": {
                    "type": "string",
                    "example": "Rostam Dastan"
                }
            }
        },
        "internal_adapters_http.QuestionResponse": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                },
                "option_a": {
                    "type": "string",
                    "example": "Input validation"
                },
                "option_b": {
                    "type": "string",
                    "example": "Database queries"
                },
                "option_c": {
                    "type": "string",
                    "example": "File uploads"
                },
                "option_d": {
                    "type": "string",
                    "example": "Network protocols"
                },
                "text": {
                    "type": "string",
                    "example": "What does SQL injection exploit?"
                }
            }
        },
        "internal_adapters_http.SignupRequest": {
            "type": "object",
            "required": [
                "email",
                "name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rostam@haoma.dev"
                },
                "name": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 2,
                    "example": "Rostam Dastan"
                },
                "password": {
                    "type": "string",
                    "minLength": 6,
                    "example": "cyber_guardian_2024"
                }
            }
        },
        "internal_adapters_http.SignupResponse": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "rostam@haoma.dev"
                },
                "id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                },
                "message": {
                    "type": "string",
                    "example": "Welcome to Haoma's carnival! Your account has been created."
                },
                "name": {
                    "type": "string",
                    "example": "Rostam Dastan"
                }
            }
        },
        "internal_adapters_http.StartNodeRequest": {
            "type": "object",
            "required": [
                "node_code"
            ],
            "properties": {
                "node_code": {
                    "type": "string",
                    "example": "NODE_CRYPTO_001"
                },
                "session_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                }
            }
        },
        "internal_adapters_http.StartNodeResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "🎪 Welcome to Node 1: Cryptography! Answer all questions to continue."
                },
                "node": {
                    "$ref": "#/definitions/internal_adapters_http.NodeResponse"
                },
                "session_id": {
                    "type": "string",
                    "example": "123e4567-e89b-12d3-a456-426614174001"
                }
            }
        },
        "internal_adapters_http.StartSessionRequest": {
            "type": "object"
        },
        "internal_adapters_http.StartSessionResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "Session created! Scan a node QR code to begin your journey."
                },
                "session_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440000"
                }
            }
        },
        "internal_adapters_http.SubmitAnswerRequest": {
            "type": "object",
            "required": [
                "answer",
                "question_id"
            ],
            "properties": {
                "answer": {
                    "type": "string",
                    "example": "B"
                },
                "question_id": {
                    "type": "string",
                    "example": "550e8400-e29b-41d4-a716-446655440001"
                }
            }
        },
        "internal_adapters_http.SubmitAnswerResponse": {
            "type": "object",
            "properties": {
                "current_score": {
                    "type": "integer",
                    "example": 320
                },
                "is_correct": {
                    "type": "boolean",
                    "example": true
                },
                "message": {
                    "type": "string",
                    "example": "Correct! 4 questions remaining in this node."
                },
                "node_completed": {
                    "type": "boolean",
                    "example": false
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token.",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/api/v1",
	Schemes:          []string{},
	Title:            "Haoma - Black-Box Carnival API",
	Description:      "Persian god meets cyber trials. A 7-node security quiz for ELECOMP 1404.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
